@page "/change-password"

@inject IAccountClientService AccountService
@inject NavigationManager NavigationManager

<h3 class="mb-4">Change Password</h3>

<div class="card shadow-lg border-0" style="max-width: 600px; margin: 0 auto;">
    <div class="card-body p-4">
        <EditForm Model="@Model" OnValidSubmit="@HandleChangePassword">
            <DataAnnotationsValidator />

            <div class="mb-3">
                <label class="form-label">Current Password</label>
                <InputText type="password" @bind-Value="@Model.CurrentPassword" class="form-control" />
                <ValidationMessage For="@(() => Model.CurrentPassword)" class="text-danger small" />
            </div>

            <div class="mb-3">
                <label class="form-label">New Password</label>
                <InputText type="password" @bind-Value="@Model.NewPassword" class="form-control" />
                <ValidationMessage For="@(() => Model.NewPassword)" class="text-danger small" />
            </div>

            <div class="mb-4">
                <label class="form-label">Confirm New Password</label>
                <InputText type="password" @bind-Value="@Model.ConfirmPassword" class="form-control" />
                <ValidationMessage For="@(() => Model.ConfirmPassword)" class="text-danger small" />
            </div>

            <div class="d-grid">
                <button type="submit" class="btn btn-primary fw-semibold">
                    Change Password
                </button>
            </div>
        </EditForm>

        @if (!string.IsNullOrEmpty(Message))
        {
            <div class="alert mt-3 @(IsSuccess ? "alert-success" : "alert-danger") shadow-sm">
                @Message
            </div>
        }
    </div>
</div>




@code {
    private ChangePasswordViewModel Model { get; set; } = new ChangePasswordViewModel();
    private string Message { get; set; }
    private bool IsSuccess { get; set; }

    private async Task HandleChangePassword()
    {
        var result = await AccountService.ChangePasswordAsync(Model);

        IsSuccess = result.IsSuccess;
        Message = result.Message;

        if (IsSuccess)
        {
            Model = new ChangePasswordViewModel();
        }
    }
}