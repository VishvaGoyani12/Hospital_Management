@page "/reset-password"
@inject IAccountClientService AccountService
@inject NavigationManager NavigationManager

<h3>Reset Password</h3>

<EditForm Model="@Model" OnValidSubmit="@HandleResetPassword">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <input type="hidden" name="token" value="@Model.Token" />
    <input type="hidden" name="email" value="@Model.Email" />

    <div class="form-group">
        <label>New Password</label>
        <InputText type="password" @bind-Value="@Model.Password" class="form-control" />
        <ValidationMessage For="@(() => Model.Password)" />
    </div>

    <div class="form-group">
        <label>Confirm New Password</label>
        <InputText type="password" @bind-Value="@Model.ConfirmPassword" class="form-control" />
        <ValidationMessage For="@(() => Model.ConfirmPassword)" />
    </div>

    <button type="submit" class="btn btn-primary">Reset Password</button>
</EditForm>

@if (!string.IsNullOrEmpty(Message))
{
    <div class="alert @(IsSuccess ? "alert-success" : "alert-danger") mt-3">@Message</div>
}

@code {
    [Parameter]
    [SupplyParameterFromQuery(Name = "token")]
    public string Token { get; set; }

    [Parameter]
    [SupplyParameterFromQuery(Name = "email")]
    public string Email { get; set; }

    private ResetPasswordViewModel Model { get; set; } = new ResetPasswordViewModel();
    private string Message { get; set; }
    private bool IsSuccess { get; set; }

    protected override void OnInitialized()
    {
        Model.Token = Token;
        Model.Email = Email;
    }

    private async Task HandleResetPassword()
    {
        try
        {
            var result = await AccountService.ResetPasswordAsync(Model);

            IsSuccess = result.IsSuccess;
            Message = result.Message;

            if (IsSuccess)
            {
                NavigationManager.NavigateTo("/reset-password-confirmation");
            }
        }
        catch (Exception ex)
        {
            IsSuccess = false;
            Message = $"An error occurred: {ex.Message}";
        }
    }
}